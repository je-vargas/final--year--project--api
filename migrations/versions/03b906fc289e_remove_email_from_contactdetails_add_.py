"""remove email from contactDetails add username to userAccount

Revision ID: 03b906fc289e
Revises: 
Create Date: 2022-03-22 16:08:29.396335

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '03b906fc289e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('accountRoles_roles_id_fkey', 'accountRoles', type_='foreignkey')
    op.drop_constraint('accountRoles_userAccountId_fkey', 'accountRoles', type_='foreignkey')
    op.create_foreign_key(None, 'accountRoles', 'roles', ['roles_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'accountRoles', 'userAccount', ['userAccountId'], ['id'], ondelete='CASCADE')
    op.drop_constraint('contactDetails_emailAddress_key', 'contactDetails', type_='unique')
    op.drop_column('contactDetails', 'emailAddress')
    op.drop_constraint('employer_companyName_fkey', 'employer', type_='foreignkey')
    op.drop_constraint('employer_industry_id_fkey', 'employer', type_='foreignkey')
    op.create_foreign_key(None, 'employer', 'industry', ['industry_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'employer', 'userAccount', ['companyName'], ['id'], ondelete='CASCADE')
    op.drop_constraint('employerContacts_ContactDetails_id_fkey', 'employerContacts', type_='foreignkey')
    op.drop_constraint('employerContacts_employer_id_fkey', 'employerContacts', type_='foreignkey')
    op.create_foreign_key(None, 'employerContacts', 'employer', ['employer_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'employerContacts', 'contactDetails', ['ContactDetails_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('jobSchedule_workingSchedule_id_fkey', 'jobSchedule', type_='foreignkey')
    op.drop_constraint('jobSchedule_job_id_fkey', 'jobSchedule', type_='foreignkey')
    op.create_foreign_key(None, 'jobSchedule', 'workingSchedule', ['workingSchedule_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'jobSchedule', 'jobs', ['job_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('jobs_category_id_fkey', 'jobs', type_='foreignkey')
    op.drop_constraint('jobs_employer_id_fkey', 'jobs', type_='foreignkey')
    op.create_foreign_key(None, 'jobs', 'employer', ['employer_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'jobs', 'category', ['category_id'], ['id'], ondelete='CASCADE')
    op.add_column('userAccount', sa.Column('username', sa.String(), nullable=False))
    op.drop_constraint('userAccount_contactDetails_id_fkey', 'userAccount', type_='foreignkey')
    op.create_foreign_key(None, 'userAccount', 'contactDetails', ['contactDetails_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('userVolunteeringHistory_job_id_fkey', 'userVolunteeringHistory', type_='foreignkey')
    op.drop_constraint('userVolunteeringHistory_user_id_fkey', 'userVolunteeringHistory', type_='foreignkey')
    op.create_foreign_key(None, 'userVolunteeringHistory', 'jobs', ['job_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'userVolunteeringHistory', 'userAccount', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('volunteerCV_userAccount_id_fkey', 'volunteerCV', type_='foreignkey')
    op.create_foreign_key(None, 'volunteerCV', 'userAccount', ['userAccount_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('volunteerSkills_userAccount_id_fkey', 'volunteerSkills', type_='foreignkey')
    op.create_foreign_key(None, 'volunteerSkills', 'userAccount', ['userAccount_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'volunteerSkills', type_='foreignkey')
    op.create_foreign_key('volunteerSkills_userAccount_id_fkey', 'volunteerSkills', 'userAccount', ['userAccount_id'], ['id'])
    op.drop_constraint(None, 'volunteerCV', type_='foreignkey')
    op.create_foreign_key('volunteerCV_userAccount_id_fkey', 'volunteerCV', 'userAccount', ['userAccount_id'], ['id'])
    op.drop_constraint(None, 'userVolunteeringHistory', type_='foreignkey')
    op.drop_constraint(None, 'userVolunteeringHistory', type_='foreignkey')
    op.create_foreign_key('userVolunteeringHistory_user_id_fkey', 'userVolunteeringHistory', 'userAccount', ['user_id'], ['id'])
    op.create_foreign_key('userVolunteeringHistory_job_id_fkey', 'userVolunteeringHistory', 'jobs', ['job_id'], ['id'])
    op.drop_constraint(None, 'userAccount', type_='foreignkey')
    op.create_foreign_key('userAccount_contactDetails_id_fkey', 'userAccount', 'contactDetails', ['contactDetails_id'], ['id'])
    op.drop_column('userAccount', 'username')
    op.drop_constraint(None, 'jobs', type_='foreignkey')
    op.drop_constraint(None, 'jobs', type_='foreignkey')
    op.create_foreign_key('jobs_employer_id_fkey', 'jobs', 'employer', ['employer_id'], ['id'])
    op.create_foreign_key('jobs_category_id_fkey', 'jobs', 'category', ['category_id'], ['id'])
    op.drop_constraint(None, 'jobSchedule', type_='foreignkey')
    op.drop_constraint(None, 'jobSchedule', type_='foreignkey')
    op.create_foreign_key('jobSchedule_job_id_fkey', 'jobSchedule', 'jobs', ['job_id'], ['id'])
    op.create_foreign_key('jobSchedule_workingSchedule_id_fkey', 'jobSchedule', 'workingSchedule', ['workingSchedule_id'], ['id'])
    op.drop_constraint(None, 'employerContacts', type_='foreignkey')
    op.drop_constraint(None, 'employerContacts', type_='foreignkey')
    op.create_foreign_key('employerContacts_employer_id_fkey', 'employerContacts', 'employer', ['employer_id'], ['id'])
    op.create_foreign_key('employerContacts_ContactDetails_id_fkey', 'employerContacts', 'contactDetails', ['ContactDetails_id'], ['id'])
    op.drop_constraint(None, 'employer', type_='foreignkey')
    op.drop_constraint(None, 'employer', type_='foreignkey')
    op.create_foreign_key('employer_industry_id_fkey', 'employer', 'industry', ['industry_id'], ['id'])
    op.create_foreign_key('employer_companyName_fkey', 'employer', 'userAccount', ['companyName'], ['id'])
    op.add_column('contactDetails', sa.Column('emailAddress', postgresql.TIME(), autoincrement=False, nullable=False))
    op.create_unique_constraint('contactDetails_emailAddress_key', 'contactDetails', ['emailAddress'])
    op.drop_constraint(None, 'accountRoles', type_='foreignkey')
    op.drop_constraint(None, 'accountRoles', type_='foreignkey')
    op.create_foreign_key('accountRoles_userAccountId_fkey', 'accountRoles', 'userAccount', ['userAccountId'], ['id'])
    op.create_foreign_key('accountRoles_roles_id_fkey', 'accountRoles', 'roles', ['roles_id'], ['id'])
    # ### end Alembic commands ###
